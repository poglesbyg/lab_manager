version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - app
    networks:
      - lab_network

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - lab_network

  app:
    build: .
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/lab_manager
      - RUST_LOG=info
      - STORAGE_PATH=/usr/local/bin/storage
    volumes:
      - app_storage:/usr/local/bin/storage
    depends_on:
      - db
    networks:
      - lab_network

  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
      - app_storage:/usr/local/bin/storage
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/lab_manager
      - RUST_LOG=info
      - STORAGE_PATH=/usr/local/bin/storage
    depends_on:
      - db
    networks:
      - lab_network

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lab_manager
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lab_network

volumes:
  postgres_data:
  app_storage:

networks:
  lab_network:
    driver: bridge 
